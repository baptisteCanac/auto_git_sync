import tkinter as tk
import time
import logging
from wifi_manager import WifiManager
from github_manager import GithubManager

# Configuration des logs
logging.basicConfig(
    filename="logs.log",  # Fichier de log
    level=logging.INFO,  # Niveau INFO pour suivre les √©v√©nements normaux
    format="%(asctime)s - %(levelname)s - %(message)s",  # Format des logs
)

def show_popup():
    global popup
    popup = tk.Tk()  # Cr√©e une fen√™tre principale
    popup.title("AutoGitSync")
    popup.geometry("300x100")
    popup.resizable(False, False)

    label = tk.Label(popup, text="""Synchronisation en cours
    veuillez patienter...""", font=("Arial", 12))
    label.pack(pady=20)

    # Lancer la fonction `main()` apr√®s un court d√©lai (100ms)
    popup.after(100, main)

    popup.mainloop()  # D√©marrer la boucle d'√©v√©nements Tkinter

def close_popup():
    global popup
    if popup:
        popup.destroy()
        popup = None

def main():
    """
    Activer le wifi
    Se connecter au bon r√©seau
    Se connecter au bon compte GitHub
    Cr√©er une nouvelle branche
    Se d√©connecter du compte GitHub
    Oublier le r√©seau
    D√©sactiver le wifi
    """
    logging.info("üîÑ D√©but de la synchronisation.")
    
    logging.info("Activation du WiFi...")
    WifiManager().activer_wifi()
    
    logging.info("Connexion au r√©seau WiFi...")
    WifiManager().se_connecter()
    
    time.sleep(10)  # Attendre la connexion au WiFi
    
    logging.info("üöÄ Ex√©cution du workflow GitHub...")
    GithubManager().execute_workflow()
    
    logging.info("üì¥ D√©sactivation du WiFi...")
    WifiManager().desactiver_wifi()
    
    logging.info("‚úÖ Synchronisation termin√©e.")
    
    close_popup()

# Exemple d'utilisation
show_popup()
